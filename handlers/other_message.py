from aiogram import Dispatcher, types
import random
from bot_config import names

async def myinfo_handler(message: types.Message):
    user = message.from_user
    await message.answer(
        f"–í–∞—à ID: {user.id}\n"
        f"–í–∞—à–µ –∏–º—è: {user.first_name}\n"
        f"–í–∞—à username: @{user.username if user.username else '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}"
    )


async def random_handler(message: types.Message):
    random_name = random.choice(names)
    await message.answer(f"–°–ª—É—á–∞–π–Ω–æ–µ –∏–º—è: {random_name}")


async def promo_handler(message: types.Message):
    await message.answer(
        "–ù–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∞–∫—Ü–∏–∏:\n"
        "–®–∞—É—Ä–º–∞ 2+1 ‚Äî –∑–∞–∫–∞–∂–∏—Ç–µ –¥–≤–µ —à–∞—É—Ä–º—ã –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ç—Ä–µ—Ç—å—é –≤ –ø–æ–¥–∞—Ä–æ–∫!\n"
        "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 1000 —Å–æ–º.\n"
        "–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏!"
    )


async def loyalty_handler(message: types.Message):
    await message.answer(
        "–ù–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏:\n"
        "–ö–∞–∂–¥—ã–π 10-–π –∑–∞–∫–∞–∑ ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ!\n"
        "–°–∫–∏–¥–∫–∞ 10% –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è üéÇ\n"
        "–ö—ç—à–±—ç–∫ 5% –Ω–∞ –≤—Å–µ –∑–∞–∫–∞–∑—ã –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏."
    )


async def rush_hour_handler(message: types.Message):
    await message.answer(
        "–ß–∞—Å—ã –ø–∏–∫:\n"
        "12:00 - 14:00 (–æ–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤)\n"
        "18:00 - 21:00 (—É–∂–∏–Ω –∏ –≤–µ—á–µ—Ä–Ω–∏–π —Ç—Ä–∞—Ñ–∏–∫)"
    )


async def other_handler(message: types.Message):
    await message.answer("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é.")


def register_handlers(dp: Dispatcher):
    dp.register_message_handler(myinfo_handler, commands=['myinfo'])
    dp.register_message_handler(random_handler, commands=['random'])
    dp.register_message_handler(promo_handler, commands=["promo"])
    dp.register_message_handler(loyalty_handler, commands=["loyalty"])
    dp.register_message_handler(rush_hour_handler, commands=["rush_hour"])
    dp.register_message_handler(other_handler)